#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 100
int IsNumIn(char word[]);
int IsSpcIn(char word[]);
void Trim(char oldWord[],char newWord[]);
int Seg(char words[], char wArray[][100] );
int main(void)
{
    int flag1=0,flag2=0,len=0,i;
    char word[N],a[N][100];
    gets(word);
    flag1=IsNumIn(word);
    flag2=IsSpcIn(word);
    if(flag1==1)
        printf("error\n");
    else if(flag2==0)
    {
        Trim(word,a[0]);
        printf("%s\n",a[0]);
    }
    else if(flag2==1)
    {
        len=Seg(word,a);
        for(i=0;i<len;i++)
        {
            printf("%s\n",a[i]);
        }
    }
    return 0;
}
//单词内是否包含数字
int IsNumIn(char word[])
{
    int i;
    for(i=0;word[i]!='\0';i++)
    {
        if(word[i]>='0'&&word[i]<='9')
            return 1;
    }
    return 0;
}
//单词内是否包含空格
int IsSpcIn(char word[])
{
    int i;
    for(i=0;word[i]!='\0';i++)
    {
        if(word[i]!=' '&&word[i+1]==' '&&word[i+2]!=' ')
            return 1;
    }
    return 0;
}
//去掉单词的前后空格，tab键和换行符
void Trim(char oldWord[],char newWord[])
{
    int i,j;
    for(i=0,j=0;oldWord[i]!='\0';i++,j++)
    {
        if(oldWord[i]==' '&&(oldWord[i-1]==' '||oldWord[i+1]==' ')||oldWord[i]=='\n'||oldWord[i]=='\t')
        {
            j--;
        }
        else
        {
            newWord[j]=oldWord[i];
        }
    }
    newWord[j]='\0';
}
//单词内部有空格，分解成多个单词,假设单词内部只有一个空格，没有两个连续空格的情况发生
int Seg(char words[], char wArray[][100] )
{
    int len=0,i,j,k,pos=0;
    char a[N];
    Trim(words,a);
    for(i=0;a[i]!='\0';i++)
    {
        if(a[i]!=' '&&(a[i+1]==' '||a[i+1]=='\0'))
        {
            len++;
            for(j=0,k=pos;a[k]!=' '&&a[k]!='\0';j++,k++)
            {
                wArray[len-1][j]=a[k];
            }
            wArray[len-1][j]='\0';
            pos=i+2;
        }
    }
    return len;
}
